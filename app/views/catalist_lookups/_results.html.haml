- as_abr = as_abr || false



- reject_content = capture_haml do
  - state_url = @lookup.state&.registrar_url
  - if as_abr && @abr
    = t('txt.abr.no_match_intro', state: @lookup.state.name).html_safe
  - else 
    = t('txt.lookup.no_match_intro', state: @lookup.state.name, address: @lookup.address, first_name: @lookup.first, ).html_safe
  - if state_url
    = t('txt.lookup.check_again', state: @lookup.state.name, state_url: state_url, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe
  - else
    = t('txt.lookup.check_again_no_link', state: @lookup.state.name, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe

  
  - if as_abr && @abr
    - continue_url = @abr.eligible_for_oabr? ? state_online_abr_path(@abr) : step_3_abr_path(@abr)   
    %br
    %h1{role: "heading", "aria-level": 2}= t('txt.abr.no_match_options_header')
    = t('txt.abr.no_match_options').html_safe
    
    %span.rollover_button.button{role: "button"}
      = link_to t('txt.abr.register'), registration_abr_path(@abr)

    %span.rollover_button.button{role: "button"}
      = link_to t('txt.lookup.go_back'), step_2_abr_path(@abr)


    %span.rollover_button.button{role: "button"}
      = link_to t('txt.abr.continue_no_match'), continue_url
    
  - else
    %span.rollover_button.button{role: "button"}
      = link_to t('txt.lookup.register'), registration_catalist_lookup_path(@lookup)
      
    %span.rollover_button.button{role: "button"}
      = link_to t('txt.lookup.go_back'), new_catalist_lookup_path(partner: @lookup.partner, zip: @lookup.zip, source: @lookup.tracking_source, tracking: @lookup.tracking_id, email: @lookup.email, first_name: @lookup.first, last_name: @lookup.last, state: @lookup.state_abbrev)


%h1{role: "heading", "aria-level": 1}
  - if @lookup.is_match?
    .check= t('txt.lookup.step_2_header_check')
    .accept{style: "display: none"}= t('txt.lookup.step_2_header_found', first_name: @lookup.first)
    .reject{style: "display: none"}= t('txt.lookup.step_2_header_not_found', first_name: @lookup.first) 
  - else
    = t('txt.lookup.step_2_header_not_found', first_name: @lookup.first).html_safe

.intro-message
  = t('txt.lookup.step_2_instructions').html_safe


- if @lookup.is_match?
  .check 
    %p= t('txt.lookup.check.matched', first_name: @lookup.first)
    = render partial: 'abrs/catalist_lookup', locals: { catalist_lookup: @lookup}
    %p{style: "text-transform: capitalize" }
      = t('txt.lookup.check.birth_date', birth_date: @lookup.matched_data["birthdate"])
      %br
      = t('txt.lookup.check.voter_status', voter_status: @lookup.matched_data["voterstatus"])

    
  - state_url = @lookup.state&.registrar_url
  
  - if as_abr && @abr
    - continue_url = @abr.eligible_for_oabr? ? state_online_abr_path(@abr) : step_3_abr_path(@abr)        
    - state_url = @lookup.state&.registrar_url
  
    %span.rollover_button.button{role: "button"}
      = link_to t('txt.abr.continue_match'), continue_url

    %h1{role: "heading", "aria-level": 3}= t('txt.lookup.matched_error_header')
    
    %p= as_abr && @abr ? t('txt.abr.matched_error_intro') : t('txt.lookup.matched_error_intro')
    
    .reject
    
      - if state_url
        = t('txt.lookup.check_again', state: @lookup.state.name, state_url: state_url, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe
      - else
        = t('txt.lookup.check_again_no_link', state: @lookup.state.name, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe

      = t('txt.abr.no_match_intro', state: @lookup.state.name).html_safe

      = t('txt.abr.no_match_options').html_safe
      


    %span.rollover_button.button{role: "button"}
      = link_to t('txt.abr.register'), registration_abr_path(@abr)

    %span.rollover_button.button{role: "button"}
      = link_to t('txt.abr.continue_no_match'), continue_url
    
    %span.rollover_button.button{role: "button"}
      = link_to t('txt.lookup.go_back'), step_2_abr_path(@abr)
  - else

    #confirm_match
      %h1{"aria-level": "3"}= t('txt.lookup.matched')
      .intro-message
       -# %p= t('txt.lookup.abr', url: abr_catalist_lookup_path(@lookup)).html_safe
        %p= t('txt.lookup.how_to_vote', url: "https://www.rockthevote.org/how-to-vote/#{@lookup.state.name.downcase.gsub(/\s+/,'-')}?source=lookup").html_safe
    
      %h1{role: "heading", "aria-level": 3}= t('txt.lookup.matched_error_header')

      .reject
        - if state_url
          = t('txt.lookup.check_again', state: @lookup.state.name, state_url: state_url, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe
        - else
          = t('txt.lookup.check_again_no_link', state: @lookup.state.name, state_date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe

        %span.rollover_button.button{role: "button"}
          = link_to t('txt.lookup.register'), registration_catalist_lookup_path(@lookup)
    
        %span.rollover_button.button{role: "button"}
          = link_to t('txt.lookup.go_back'), new_catalist_lookup_path(partner: @lookup.partner, zip: @lookup.zip, source: @lookup.tracking_source, tracking: @lookup.tracking_id, email: @lookup.email, first_name: @lookup.first, last_name: @lookup.last, state: @lookup.state_abbrev)


  - if @lookup.partner && !@lookup.partner.external_conversion_snippet.blank?
    = @lookup.partner.external_conversion_snippet.to_s.html_safe

- else 
  .reject
    = reject_content
  -# = t('txt.lookup.not_matched', first_name: @lookup.first, state_abbrev: @lookup.state_abbrev, url:  @lookup.state&.registrar_url, count: @lookup.state_last_updated_days).html_safe
  -# %span.rollover_button.button
  -#   = link_to t('txt.lookup.register'), registration_catalist_lookup_path(@lookup)
  -# %br
  -# = t('txt.lookup.check_again', state_abbrev: @lookup.state_abbrev, url: @lookup.state&.registrar_url, count: @lookup.state_last_updated_days).html_safe
  -# = t('txt.lookup.last_update', state: @lookup.state_name, url: @lookup.state&.registrar_url, date: l(@lookup.state_last_updated_at.to_date, format: :long)).html_safe
  
